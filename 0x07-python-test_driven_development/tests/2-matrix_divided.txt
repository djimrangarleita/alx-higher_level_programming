"""
# Test the module matrice matrix that divide matrix by div
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided()
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([[1, 2], [3, 1]])
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided('hello', 'world')
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([3, 1, 10], 3)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], ['4', 1]], 3)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 7, 2], ['4', 1]], 2)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[3, 1, 2], [4, 1]], 4)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2], [4, 1]], 'world')
Traceback (most recent call last):
	...
TypeError: div must be a number

>>> matrix_divided([[1, 2], ['4', 1]], 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2], [4, 1]], 2)
[[0.5, 1.0], [2.0, 0.5]]

>>> matrix_divided([[4, 5, 9], [11, 8, 5]], 2)
[[2.0, 2.5, 4.5], [5.5, 4.0, 2.5]]

"""
